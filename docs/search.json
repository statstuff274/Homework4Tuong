[
  {
    "objectID": "Week 4 Assignment.html",
    "href": "Week 4 Assignment.html",
    "title": "Week 4 - R, Tidyverse, Delimited Data, Excel, Manipulating",
    "section": "",
    "text": "The relative path that would need to be used to specify the file would be: ../MyData.csv. The ../ moves the directory from homework/ back to the to the myfolder/ and allows it to access MyData.cvs, which is located in myfolder/.\n\n\n\n\n\nR projects allow you to divide your work into multiple contexts through its own: working directory, workspace, history, folder structure, and source documents. It works to keep all of your relevant files, code, and scripts in your workspace/directory/repo, making it easy for you to pick up from you last left your project. Additionally, we can take advantage of this and if we share our entire folder with others, they can also pick up the R project and the paths to things will work (under the assumption that we used relative paths) (Moodle).\n\n\n\n\n\nFrom week 1 lectures, Git is a version control system that tracks all the changes that a user makes to the files in a folder… this way you have a record of the changes that you have made to your files and it can revert back to previous versions of it if you ever need to do so. GitHub is a cloud-based platform that allows you to store, share, and work with others to write code. It allows you to store your work or code in a “repository” on GitHub” which allows you to showcase and share your work, track and manage your code, allow others to review your code, and collaborate with others. The repository is created by GitHub and is tracked by Git, and allows the user (and other users) to commit/pull/push changes to the files in the repo. In short, Git is the software and GitHub is the service - they work with each other to provide a workspace where Git can interact with GitHub’s repository.\n\n\n\n\n\nTibbles are data frames but a modified version that is used in tidyverse. The two main differences between a tibble and a data.frame in regards to their usage are: printing and subsetting. For printing, tibbles only showcases the first 10 rows, and all of the columns that fit on the screen. For subsetting, tibbles is much more strict and adheres to the following: [ always returns a tibble by default, partial matching of columns with $ and [[ is not supported, only scalars or vectors with the same length as the number of rows can be used for assignment, rows outside of tibbles boundaries cannot be accessed, and when updating [[&lt;- and [,-, type changes of entire columns are supported, but updating a part of a column requires that the new value is coercible to the existing type. *Note: tibble() does much less than data.frame(): it doesn’t change the type of inputs, it doesn’t change the names of variables, and it never creates row names (R for Data Science & Tidyverse).\n\n\n\n\n\narrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\n#installed tidyverse package in console\n\nlibrary(tidyverse) #loaded in tidyverse to use\n\narrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species), Petal.Length &lt; 1.55), Species) #using this to see what it outputs\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows\n\n\n\niris &lt;- data.frame(iris)\n\niris |&gt;\n  as.tibble() |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows"
  },
  {
    "objectID": "Week 4 Assignment.html#task-1-conceptual-questions",
    "href": "Week 4 Assignment.html#task-1-conceptual-questions",
    "title": "Week 4 - R, Tidyverse, Delimited Data, Excel, Manipulating",
    "section": "",
    "text": "The relative path that would need to be used to specify the file would be: ../MyData.csv. The ../ moves the directory from homework/ back to the to the myfolder/ and allows it to access MyData.cvs, which is located in myfolder/.\n\n\n\n\n\nR projects allow you to divide your work into multiple contexts through its own: working directory, workspace, history, folder structure, and source documents. It works to keep all of your relevant files, code, and scripts in your workspace/directory/repo, making it easy for you to pick up from you last left your project. Additionally, we can take advantage of this and if we share our entire folder with others, they can also pick up the R project and the paths to things will work (under the assumption that we used relative paths) (Moodle).\n\n\n\n\n\nFrom week 1 lectures, Git is a version control system that tracks all the changes that a user makes to the files in a folder… this way you have a record of the changes that you have made to your files and it can revert back to previous versions of it if you ever need to do so. GitHub is a cloud-based platform that allows you to store, share, and work with others to write code. It allows you to store your work or code in a “repository” on GitHub” which allows you to showcase and share your work, track and manage your code, allow others to review your code, and collaborate with others. The repository is created by GitHub and is tracked by Git, and allows the user (and other users) to commit/pull/push changes to the files in the repo. In short, Git is the software and GitHub is the service - they work with each other to provide a workspace where Git can interact with GitHub’s repository.\n\n\n\n\n\nTibbles are data frames but a modified version that is used in tidyverse. The two main differences between a tibble and a data.frame in regards to their usage are: printing and subsetting. For printing, tibbles only showcases the first 10 rows, and all of the columns that fit on the screen. For subsetting, tibbles is much more strict and adheres to the following: [ always returns a tibble by default, partial matching of columns with $ and [[ is not supported, only scalars or vectors with the same length as the number of rows can be used for assignment, rows outside of tibbles boundaries cannot be accessed, and when updating [[&lt;- and [,-, type changes of entire columns are supported, but updating a part of a column requires that the new value is coercible to the existing type. *Note: tibble() does much less than data.frame(): it doesn’t change the type of inputs, it doesn’t change the names of variables, and it never creates row names (R for Data Science & Tidyverse).\n\n\n\n\n\narrange(filter(select(as_tibble(iris), starts_with(“Petal”), Species), Petal.Length &lt; 1.55), Species)\n\n\n#installed tidyverse package in console\n\nlibrary(tidyverse) #loaded in tidyverse to use\n\narrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species), Petal.Length &lt; 1.55), Species) #using this to see what it outputs\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows\n\n\n\niris &lt;- data.frame(iris)\n\niris |&gt;\n  as.tibble() |&gt;\n  select(starts_with(\"Petal\"), Species) |&gt;\n  filter(Petal.Length &lt; 1.55) |&gt;\n  arrange(Species)\n\n# A tibble: 37 × 3\n   Petal.Length Petal.Width Species\n          &lt;dbl&gt;       &lt;dbl&gt; &lt;fct&gt;  \n 1          1.4         0.2 setosa \n 2          1.4         0.2 setosa \n 3          1.3         0.2 setosa \n 4          1.5         0.2 setosa \n 5          1.4         0.2 setosa \n 6          1.4         0.3 setosa \n 7          1.5         0.2 setosa \n 8          1.4         0.2 setosa \n 9          1.5         0.1 setosa \n10          1.5         0.2 setosa \n# ℹ 27 more rows"
  },
  {
    "objectID": "Week 4 Assignment.html#task-2-reading-delimited-data",
    "href": "Week 4 Assignment.html#task-2-reading-delimited-data",
    "title": "Week 4 - R, Tidyverse, Delimited Data, Excel, Manipulating",
    "section": "Task 2: Reading Delimited Data",
    "text": "Task 2: Reading Delimited Data\n\nGlass Data\n\n1. Read data into R using a URL, renaming column names, and printing out the tibble.\n\nglassdata &lt;- read_csv(\"https://www4.stat.ncsu.edu/online/datasets/glass.data\", col_names = FALSE) #read in data from URL\n\n\ncolnames(glassdata) &lt;- c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\", \"Type_of_glass\") #renamed column names\nglassdata #printed out column names\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;         &lt;dbl&gt;\n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0                1\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0                1\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0                1\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0                1\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0                1\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26             1\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0                1\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0                1\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0                1\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11             1\n# ℹ 204 more rows\n\n\n\n\n2. Start a chain and create a character chain.\n\nlibrary(dplyr)\n\nglassdata &lt;- glassdata |&gt;\n  mutate(\n    Type_of_glass = ifelse(Type_of_glass == 1, \"building_windows_float_processed\",\n                    ifelse(Type_of_glass == 2, \"building_windows_non_float_processed\",\n                    ifelse(Type_of_glass == 3, \"vehicle_windows_float_processed\",\n                    ifelse(Type_of_glass == 5, \"containers\",\n                    ifelse(Type_of_glass == 6, \"tableware\",\n                    ifelse(Type_of_glass == 7, \"headlamps\", \"Error\")\n))))))\nglassdata\n\n# A tibble: 214 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass    \n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;            \n 1     1  1.52  13.6  4.49  1.1   71.8  0.06  8.75     0  0    building_windows…\n 2     2  1.52  13.9  3.6   1.36  72.7  0.48  7.83     0  0    building_windows…\n 3     3  1.52  13.5  3.55  1.54  73.0  0.39  7.78     0  0    building_windows…\n 4     4  1.52  13.2  3.69  1.29  72.6  0.57  8.22     0  0    building_windows…\n 5     5  1.52  13.3  3.62  1.24  73.1  0.55  8.07     0  0    building_windows…\n 6     6  1.52  12.8  3.61  1.62  73.0  0.64  8.07     0  0.26 building_windows…\n 7     7  1.52  13.3  3.6   1.14  73.1  0.58  8.17     0  0    building_windows…\n 8     8  1.52  13.2  3.61  1.05  73.2  0.57  8.24     0  0    building_windows…\n 9     9  1.52  14.0  3.58  1.37  72.1  0.56  8.3      0  0    building_windows…\n10    10  1.52  13    3.6   1.36  73.0  0.57  8.4      0  0.11 building_windows…\n# ℹ 204 more rows\n\n\n\n\n3. Continued chain, keeping only observations where Fe = less than 0.2 and the Type of Glass is either “tableware” or “headlamps”.\n\nglassdata &lt;- glassdata |&gt;\n  filter(Fe &lt; 0.2 & Type_of_glass == \"tableware\" | Type_of_glass == \"headlamps\")\nglassdata\n\n# A tibble: 38 × 11\n      Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe Type_of_glass\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;        \n 1   177  1.52  14    2.39  1.56  72.4  0     9.57  0        0 tableware    \n 2   178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0 tableware    \n 3   179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0 tableware    \n 4   180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0 tableware    \n 5   181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0 tableware    \n 6   182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0 tableware    \n 7   183  1.52  14.2  0     2.09  72.7  0    10.9   0        0 tableware    \n 8   184  1.52  14.6  0     0.56  73.5  0    11.2   0        0 tableware    \n 9   185  1.51  17.4  0     0.34  75.4  0     6.65  0        0 tableware    \n10   186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0 headlamps    \n# ℹ 28 more rows\n\n\n\n\n\nYeast Data\n\n1. Read Yeast data into R using URL and add column names.\n\nyeastdata &lt;- read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\", col_names = FALSE) #read in data from URL\n\n\ncolnames(yeastdata) &lt;- c(\"seq_name\", \"mcg\", \"gvh\", \"alm\", \"mit\", \"erl\", \"pox\", \"vac\", \"nuc\", \"class\") #renamed column names\nyeastdata #printed out column names\n\n# A tibble: 1,484 × 10\n   seq_name     mcg   gvh   alm   mit   erl   pox   vac   nuc class\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;\n 1 ADT1_YEAST  0.58  0.61  0.47  0.13   0.5   0    0.48  0.22 MIT  \n 2 ADT2_YEAST  0.43  0.67  0.48  0.27   0.5   0    0.53  0.22 MIT  \n 3 ADT3_YEAST  0.64  0.62  0.49  0.15   0.5   0    0.53  0.22 MIT  \n 4 AAR2_YEAST  0.58  0.44  0.57  0.13   0.5   0    0.54  0.22 NUC  \n 5 AATM_YEAST  0.42  0.44  0.48  0.54   0.5   0    0.48  0.22 MIT  \n 6 AATC_YEAST  0.51  0.4   0.56  0.17   0.5   0.5  0.49  0.22 CYT  \n 7 ABC1_YEAST  0.5   0.54  0.48  0.65   0.5   0    0.53  0.22 MIT  \n 8 BAF1_YEAST  0.48  0.45  0.59  0.2    0.5   0    0.58  0.34 NUC  \n 9 ABF2_YEAST  0.55  0.5   0.66  0.36   0.5   0    0.49  0.22 MIT  \n10 ABP1_YEAST  0.4   0.39  0.6   0.15   0.5   0    0.58  0.3  CYT  \n# ℹ 1,474 more rows\n\n\n\n\n2 /3 Start a chain that removes the seq_name and nuc columns. Continue chain to add columns corresponding to mean and median of each numeric variable\n\nyeastdata &lt;- yeastdata |&gt;\n  select(-seq_name, -nuc) |&gt;\n  group_by(class) |&gt;\n  mutate(across(where(is.numeric), list(mean = mean, median = median), .names = \"{.col}_{.fn}\"))\nyeastdata\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n     mcg   gvh   alm   mit   erl   pox   vac class mcg_mean mcg_median gvh_mean\n   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1  0.58  0.61  0.47  0.13   0.5   0    0.48 MIT      0.521       0.51    0.533\n 2  0.43  0.67  0.48  0.27   0.5   0    0.53 MIT      0.521       0.51    0.533\n 3  0.64  0.62  0.49  0.15   0.5   0    0.53 MIT      0.521       0.51    0.533\n 4  0.58  0.44  0.57  0.13   0.5   0    0.54 NUC      0.452       0.45    0.456\n 5  0.42  0.44  0.48  0.54   0.5   0    0.48 MIT      0.521       0.51    0.533\n 6  0.51  0.4   0.56  0.17   0.5   0.5  0.49 CYT      0.481       0.48    0.470\n 7  0.5   0.54  0.48  0.65   0.5   0    0.53 MIT      0.521       0.51    0.533\n 8  0.48  0.45  0.59  0.2    0.5   0    0.58 NUC      0.452       0.45    0.456\n 9  0.55  0.5   0.66  0.36   0.5   0    0.49 MIT      0.521       0.51    0.533\n10  0.4   0.39  0.6   0.15   0.5   0    0.58 CYT      0.481       0.48    0.470\n# ℹ 1,474 more rows\n# ℹ 11 more variables: gvh_median &lt;dbl&gt;, alm_mean &lt;dbl&gt;, alm_median &lt;dbl&gt;,\n#   mit_mean &lt;dbl&gt;, mit_median &lt;dbl&gt;, erl_mean &lt;dbl&gt;, erl_median &lt;dbl&gt;,\n#   pox_mean &lt;dbl&gt;, pox_median &lt;dbl&gt;, vac_mean &lt;dbl&gt;, vac_median &lt;dbl&gt;"
  },
  {
    "objectID": "Week 4 Assignment.html#task-3-combining-excel-and-delimited-data",
    "href": "Week 4 Assignment.html#task-3-combining-excel-and-delimited-data",
    "title": "Week 4 - R, Tidyverse, Delimited Data, Excel, Manipulating",
    "section": "Task 3: Combining Excel and Delimited Data",
    "text": "Task 3: Combining Excel and Delimited Data\n\nlibrary(readxl)\nwhitewinedata &lt;- read_excel(\"white-wine.xlsx\", sheet = NULL)\nwhitewinedata\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n2. Second sheet excel - read in this sheet and took those names to rename columns from sheet 1.\n\nwhitewinedata2 &lt;- read_excel(\"white-wine.xlsx\", sheet = 2)\nwhitewinedata2\n\n# A tibble: 12 × 1\n   Variables           \n   &lt;chr&gt;               \n 1 fixed_acidity       \n 2 volatile_acidity    \n 3 citric_acid         \n 4 residual_sugar      \n 5 chlorides           \n 6 free_sulfur_dioxide \n 7 total_sulfur_dioxide\n 8 density             \n 9 pH                  \n10 sulphates           \n11 alcohol             \n12 quality             \n\n\n\ncolnames(whitewinedata) &lt;- c(\"fixed_acidity\", \"volatile_acidity\", \"citric_acid\", \"residual_sugar\", \"chlorides\", \"free_sulfur_dioxide\", \"total_sulfur_dioxide\", \"density\", \"pH\", \"sulphates\", \"alcohol\", \"quality\")\nwhitewinedata\n\n# A tibble: 4,898 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\n\n3. Added a column for type of wine with a value of “white” for every observation\n\nwhitewinedata &lt;- whitewinedata|&gt;\n  mutate(type_of_wine = \"white\")\nwhitewinedata\n\n# A tibble: 4,898 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1             7             0.27        0.36           20.7     0.045\n 2            63             0.3         0.34            1.6     0.049\n 3            81             0.28        0.4             6.9     0.05 \n 4            72             0.23        0.32            8.5     0.058\n 5            72             0.23        0.32            8.5     0.058\n 6            81             0.28        0.4             6.9     0.05 \n 7            62             0.32        0.16            7       0.045\n 8             7             0.27        0.36           20.7     0.045\n 9            63             0.3         0.34            1.6     0.049\n10            81             0.22        0.43            1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type_of_wine &lt;chr&gt;\n\n\n\n\n4. Read in red wine data set using readr, replaced variable names, and append a column denoting the type as “red”\n\nredwinedata &lt;- read_csv2(\"https://www4.stat.ncsu.edu/~online/datasets/red-wine.csv\")\nredwinedata\n\n# A tibble: 1,599 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt; &lt;chr&gt;              &lt;chr&gt;                    &lt;dbl&gt; &lt;chr&gt;    \n 1              74 0.7                0                           19 0.076    \n 2              78 0.88               0                           26 0.098    \n 3              78 0.76               0.04                        23 0.092    \n 4             112 0.28               0.56                        19 0.075    \n 5              74 0.7                0                           19 0.076    \n 6              74 0.66               0                           18 0.075    \n 7              79 0.6                0.06                        16 0.069    \n 8              73 0.65               0                           12 0.065    \n 9              78 0.58               0.02                         2 0.073    \n10              75 0.5                0.36                        61 0.071    \n# ℹ 1,589 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;chr&gt;, pH &lt;dbl&gt;, sulphates &lt;chr&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\ncolnames(redwinedata) &lt;- c(\"fixed_acidity\", \"volatile_acidity\", \"citric_acid\", \"residual_sugar\", \"chlorides\", \"free_sulfur_dioxide\", \"total_sulfur_dioxide\", \"density\", \"pH\", \"sulphates\", \"alcohol\", \"quality\")\nredwinedata\n\n# A tibble: 1,599 × 12\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt; &lt;chr&gt;            &lt;chr&gt;                &lt;dbl&gt; &lt;chr&gt;    \n 1            74 0.7              0                       19 0.076    \n 2            78 0.88             0                       26 0.098    \n 3            78 0.76             0.04                    23 0.092    \n 4           112 0.28             0.56                    19 0.075    \n 5            74 0.7              0                       19 0.076    \n 6            74 0.66             0                       18 0.075    \n 7            79 0.6              0.06                    16 0.069    \n 8            73 0.65             0                       12 0.065    \n 9            78 0.58             0.02                     2 0.073    \n10            75 0.5              0.36                    61 0.071    \n# ℹ 1,589 more rows\n# ℹ 7 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;chr&gt;, pH &lt;dbl&gt;, sulphates &lt;chr&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\n\n\nredwinedata &lt;- redwinedata|&gt;\n  mutate(type_of_wine = \"red\",\n         volatile_acidity = as.numeric(volatile_acidity),\n         citric_acid = as.numeric(citric_acid),\n         residual_sugar = as.numeric(residual_sugar),\n         chlorides = as.numeric(chlorides),\n         density = as.numeric(density),\n         sulphates = as.numeric(sulphates)\n         ) #mutated variables from characters to numerics in order to combine list - wasn't able to properly copy over the columns like whitewhitedata\nredwinedata\n\n# A tibble: 1,599 × 13\n   fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1            74             0.7         0                19     0.076\n 2            78             0.88        0                26     0.098\n 3            78             0.76        0.04             23     0.092\n 4           112             0.28        0.56             19     0.075\n 5            74             0.7         0                19     0.076\n 6            74             0.66        0                18     0.075\n 7            79             0.6         0.06             16     0.069\n 8            73             0.65        0                12     0.065\n 9            78             0.58        0.02              2     0.073\n10            75             0.5         0.36             61     0.071\n# ℹ 1,589 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type_of_wine &lt;chr&gt;\n\n\n\n\n5. Combined both data sets into one data set.\n\ncombinedlist &lt;- bind_rows(list(whitewinedata, redwinedata), .id = \"id\")\ncombinedlist\n\n# A tibble: 6,497 × 14\n   id    fixed_acidity volatile_acidity citric_acid residual_sugar chlorides\n   &lt;chr&gt;         &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;     &lt;dbl&gt;\n 1 1                 7             0.27        0.36           20.7     0.045\n 2 1                63             0.3         0.34            1.6     0.049\n 3 1                81             0.28        0.4             6.9     0.05 \n 4 1                72             0.23        0.32            8.5     0.058\n 5 1                72             0.23        0.32            8.5     0.058\n 6 1                81             0.28        0.4             6.9     0.05 \n 7 1                62             0.32        0.16            7       0.045\n 8 1                 7             0.27        0.36           20.7     0.045\n 9 1                63             0.3         0.34            1.6     0.049\n10 1                81             0.22        0.43            1.5     0.044\n# ℹ 6,487 more rows\n# ℹ 8 more variables: free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;,\n#   density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;, alcohol &lt;dbl&gt;, quality &lt;dbl&gt;,\n#   type_of_wine &lt;chr&gt;\n\n\n\n\n6/7/8/9 Chained on the combined data set.\n\ncombinedlist &lt;- combinedlist |&gt;\n  filter(quality &gt; 6.5 & alcohol &lt; 132) |&gt; #filtered to only look at quality &gt; 6.5 and alcohol &lt; 132\n  arrange(desc(quality)) |&gt; #sorted data from highest to lowest by quality\n  select(contains(\"acid\"), \"alcohol\", \"type_of_wine\", \"quality\") |&gt; #selected variables containing acid, alcohol, and quality\n  group_by(quality) |&gt; #grouped by quality for stats below\n  mutate(across(alcohol, list(mean = mean, sd = sd), .names = \"{.col}_{.fn}\")) #added mean and sd of alcohol \ncombinedlist\n\n# A tibble: 1,198 × 8\n# Groups:   quality [3]\n   fixed_acidity volatile_acidity citric_acid alcohol type_of_wine quality\n           &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n 1            91             0.27        0.45     104 white              9\n 2            66             0.36        0.29     124 white              9\n 3            74             0.24        0.36     125 white              9\n 4            69             0.36        0.34     127 white              9\n 5            71             0.26        0.49     129 white              9\n 6            62             0.66        0.48     128 white              8\n 7            62             0.66        0.48     128 white              8\n 8            68             0.26        0.42     105 white              8\n 9            67             0.23        0.31     107 white              8\n10            67             0.23        0.31     107 white              8\n# ℹ 1,188 more rows\n# ℹ 2 more variables: alcohol_mean &lt;dbl&gt;, alcohol_sd &lt;dbl&gt;"
  }
]